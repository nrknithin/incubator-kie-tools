{
  "name": "@kie-tools/dmn-documentation-generator",
  "version": "0.0.0",
  "description": "Generates PDF documentation from DMN models",
  "license": "Apache-2.0",
  "keywords": [
    "dmn",
    "documentation",
    "kie-tools",
    "pdf"
  ],
  "homepage": "https://github.com/apache/incubator-kie-tools",
  "repository": {
    "type": "git",
    "url": "https://github.com/apache/incubator-kie-tools.git"
  },
  "bugs": {
    "url": "https://github.com/apache/incubator-kie-tools/issues"
  },
  "files": [
    "dist",
    "src"
  ],
  "scripts": {
    "build:dev": "rimraf dist && webpack --config webpack.config.ts --env dev",
    "build:prod": "pnpm lint && pnpm test && rimraf dist && webpack && pnpm test-e2e",
    "lint": "run-script-if --bool \"$(build-env linters.run)\" --then \"kie-tools--eslint ./src\"",
    "start": "concurrently 'pnpm start:cors-proxy' 'pnpm start:extended-services' 'pnpm start:kie-sandbox' 'pnpm start:kie-sandbox-accelerator-quarkus'",
    "start:cors-proxy": "cross-env CORS_PROXY__useHttpForHosts=\"localhost:$(build-env kieSandboxAcceleratorQuarkus.dev.port)\" npm --prefix ./node_modules/@kie-tools/cors-proxy run start",
    "start:extended-services": "cross-env EXTENDED_SERVICES_JAVA__host=\"0.0.0.0\" npm --prefix ./node_modules/@kie-tools/extended-services-java run start",
    "start:kie-sandbox": "cross-env EXTENDED_SERVICES_JAVA__host=\"0.0.0.0\" webpack serve --host 0.0.0.0 --env dev",
    "start:kie-sandbox-accelerator-quarkus": "npm --prefix ./node_modules/@kie-tools/kie-sandbox-accelerator-quarkus run start",
    "test": "run-script-if --ignore-errors \"$(build-env tests.ignoreFailures)\" --bool \"$(build-env tests.run)\" --then \"jest --silent --verbose\"",
    "test-e2e": "run-script-if --ignore-errors \"$(build-env endToEndTests.ignoreFailures)\" --bool \"$(build-env endToEndTests.run)\" --then \"pnpm test-e2e:condition\"",
    "test-e2e:condition": "run-script-if --bool \"$(build-env endToEndTests.containerized)\" --then  \"pnpm rimraf ./dist-tests-e2e\" \"pnpm test-e2e:container:start\" --else \"pnpm rimraf ./dist-tests-e2e\" \"pnpm test-e2e:run\"",
    "test-e2e:container:bash": "docker exec -it kie-tools-playwright-containerization-online-editor /bin/bash -c \"cd incubator-kie-tools/packages/online-editor && exec /bin/bash\"",
    "test-e2e:container:down": "docker compose -f ./tests-e2e/__containerization__/playwright-docker-compose.yml down",
    "test-e2e:container:run": "docker exec -i kie-tools-playwright-containerization-online-editor /bin/bash -c \"cd incubator-kie-tools/packages/online-editor && pnpm test-e2e:run\"",
    "test-e2e:container:shell": "start-server-and-test 'pnpm start' \"http-get://0.0.0.0:$(build-env corsProxy.dev.port)/ping|http-get://0.0.0.0:$(build-env extendedServicesJava.port)/ping|http-get://0.0.0.0:$(build-env onlineEditor.dev.port)/#/|http-get://0.0.0.0:$(build-env kieSandboxAcceleratorQuarkus.dev.port)/git-repo-bare.git\" 'pnpm test-e2e:container:up && pnpm test-e2e:container:bash'",
    "test-e2e:container:start": "start-server-and-test 'pnpm start' \"http-get://0.0.0.0:$(build-env corsProxy.dev.port)/ping|http-get://0.0.0.0:$(build-env extendedServicesJava.port)/ping|http-get://0.0.0.0:$(build-env onlineEditor.dev.port)/#/|http-get://0.0.0.0:$(build-env kieSandboxAcceleratorQuarkus.dev.port)/git-repo-bare.git\" 'pnpm test-e2e:container:up && pnpm test-e2e:container:run'",
    "test-e2e:container:up": "run-script-os",
    "test-e2e:container:up:darwin": "export ONLINE_EDITOR__skipPlaywrightTestsForArm64=$( [[ $(uname -p) == \"arm\" ]] && echo \"true\" || echo \"false\"); STREAM_NAME=$(build-env root.streamName) KIE_TOOLS_PLAYWRIGHT_CONTAINER__PORT=$(build-env onlineEditor.dev.port) KIE_TOOLS_PLAYWRIGHT_CONTAINER__CORS_PROXY_PORT=$(build-env corsProxy.dev.port) KIE_TOOLS_PLAYWRIGHT_CONTAINER__EXTENDED_SERVICES_PORT=$(build-env extendedServicesJava.port) KIE_TOOLS_PLAYWRIGHT_CONTAINER__QUARKUS_ACCELERATOR_PORT=$(build-env kieSandboxAcceleratorQuarkus.dev.port)  run-script-if --bool \"${CI}\" --then \"docker compose -f ./tests-e2e/__containerization__/playwright-docker-compose.yml -f ./tests-e2e/__containerization__/playwright-docker-compose.ci.yml up -d\" --else \"docker compose -f ./tests-e2e/__containerization__/playwright-docker-compose.yml up -d\"",
    "test-e2e:container:up:linux": "STREAM_NAME=$(build-env root.streamName) KIE_TOOLS_PLAYWRIGHT_CONTAINER__PORT=$(build-env onlineEditor.dev.port) KIE_TOOLS_PLAYWRIGHT_CONTAINER__CORS_PROXY_PORT=$(build-env corsProxy.dev.port) KIE_TOOLS_PLAYWRIGHT_CONTAINER__EXTENDED_SERVICES_PORT=$(build-env extendedServicesJava.port) KIE_TOOLS_PLAYWRIGHT_CONTAINER__QUARKUS_ACCELERATOR_PORT=$(build-env kieSandboxAcceleratorQuarkus.dev.port)  run-script-if --bool \"${CI}\" --then \"docker compose -f ./tests-e2e/__containerization__/playwright-docker-compose.yml -f ./tests-e2e/__containerization__/playwright-docker-compose.ci.yml up -d\" --else \"docker compose -f ./tests-e2e/__containerization__/playwright-docker-compose.yml up -d\"",
    "test-e2e:open": "pnpm exec playwright show-report dist-tests-e2e/reports",
    "test-e2e:run": "pnpm exec playwright test"
  },
  "dependencies": {
    "@kie-tools/dmn-marshaller": "workspace:*",
    "jspdf": "^2.5.1"
  },
  "devDependencies": {
    "@kie-tools/eslint": "workspace:*",
    "@kie-tools/jest-base": "workspace:*",
    "@kie-tools/root-env": "workspace:*",
    "@kie-tools/tsconfig": "workspace:*",
    "@types/jest": "^29.5.12",
    "@types/node": "^20.11.0",
    "copyfiles": "^2.4.1",
    "rimraf": "^3.0.2",
    "typescript": "^5.3.3"
  }
}
